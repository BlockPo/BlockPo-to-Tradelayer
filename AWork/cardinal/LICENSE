    Token Source License (TSL) Silver Spoon Edition (TSL:SSE)  


Copyright 2019, Patrick Dugan, modifications to the license terms may be made so long as they clearly demarcate the subversion with a new edition name.

    Preamble

    This software license is designed to enable the proliferation of open source software relating to financial protocols, identity protocols and other distributed software projects that may seek to monetize by way of having an asset exist based on the software, e.g. a “token” or “coin” and thus seeks to combine the advantages of common open source licenses like MIT or GPL, with modified conditions that restrict derivative works that would dilute the value of any asset based on the original publication without providing economic benefit to the existing asset holders.

    GPL, MIT and other popular license came of age in the 2000s when open source projects didn’t have a direct business model, patent trolling was increasingly troublesome, and large software companies would realize revenue through advertising, then sponsor open-source R&D to foment the software ecosystem of the internet we have come to enjoy in later times. Bitcoin and many successor projects in that category have also adopted the MIT License. Bitcoin’s founder vanished, adding to the mystique and purity of a totally free technology with no intellectual property, no greedy claims from an inside party, just an idea. The power of this idea snowballed into a monetary movement. 

    But what if you want to assert intellectual property rights in order to protect your investment in original research and development from being readily appropriated by better capitalized parties? Suddenly, patents are not the purview of the unproductive patent troll, but a way to protect inventors from appropriation by incumbents, what’s old is new again. As long as the patent is used productively to create a competitive moat for a specific instance of a protocol, it’s what we might call “ethically cromulent”. Without such moats, value capture for investors in research and development relating to open source protocols becomes less predictable, as sheer network effects may be taken by more aggressive parties leveraging cross-promotion and marketing budgets to acquire users at a faster pace.

    The idea of this license is to replicate the benefits of a GPL 3 license: patent considerations for contributors, mutual patent defense in case a licensee were to bring an infringement suit, the Copyleft mechanism that ensures downstream forks be TSL licensed under the same edition. Where this license primarily deviates from GPL, other than draft text, is the conditional nature of the patent license embedded within. 

Any use of any patented or non-patented, original parts of the code must abide by the terms in the license. In a more stringent edition of this license, any forking whatsoever could be forbidden, but in this version, the trying-to-be-innovative version, the version that walks the line between competitiveness and promotion of open science, this Silver Spoon version permits forks that include a hard spoon, where the holders of the token of the original project (contributors, early adopters) would be credited some stake in the token of the fork project, acting as an automatic, lawyerless, banking-system-free royalty. Any parties who don’t allow an allocation in a hard spoon fashion, respecting the balances of the original token while diluting supply in some degree, would be in violation of the patent license.

Before jumping into the legalese, this license is designed to accommodate the strange realities of start-up life in a Bitcoinizing world. It is 100% not designed to enable patent trolling, innovation camping, or Status Quo Kuo-Toa’ing. It’s 100% not designed to facilitate perpetual Centralized Administration of protocols by so-called “core”, “founding”, “original” developers, let the egos of labors-past rest. This is why the time-based founder reward we’ve seen in some… perhaps too well funded projects? That’s why that stuff can be totally removed in a fork and still be valid in this license. Usage metrics-driven vesting, closed-ended, small in % of total money supply, that’s the way to do founder rewards ethically. So such founder rewards can fall under pre-existing money supply and be protected under this license. Not as ethical as going on a hunger strike. A lot of socialists on social media have described investors and entrepreneurs as parasites who should be taken in - Reign of Terror style - so we can have a just society, but some may think it’s ethical for founders to get a non-zero return.

This license isn’t for tokens that are offered to the public as securities. Fund development with private capital under regulatory exemptions and then fair launch a commodity. Software is offered as-is with no warranty.

It’s about drawing a line in the sand, and saying: beyond this line, you do not cross. It’s about asking, “who benefits?” It’s about the Starcraft Level Editor in 1998. 

Do everything that open source licenses normally let you do, but if you’re going to fork it, make sure the pre-existing coin holders see some of that. It’s about community-driven, amicable game theory and defining the fruits of research and development in terms of defensible economics, so that the little guy can dare to risk inventing without worrying about getting fleeced. But if successful, and as a matter of course, it is encouraged that any patents be put into a fixed-charter foundation with no founder-rewriting in its structure, and automatically grant license to projects that don’t have any kind of token economics in its business model other that increasing use of existing coin supplies, such as the Bitcoin Lightning Network. Defense is one thing, but we should aspire to walk the line between not getting bullied in business and promoting human freedom. Likewise, this license disclaims its own editing once published, so to prevent any backdoor admin control on the part of projects using such a license.

Possible fork economics that are valid under this license: 

Take existing money supply, add inflation in the form of one’s own founder rewards, which being part of the future emission schedule, is protected under the license.
Take existing money supply, add inflation or new forms of emission rewards for new forms of value.
Take existing money supply, reduce inflation, redesign emission schedule.
Don’t pay yourself a pre-mine, reset the ledger, or selectively award coins. 

    Any hard spoon then must weigh the pro’s and con’s of awarding more vesting to the spooning team, versus inflating more to award users, versus inflation less, and so on, in tandem with whatever feature changes and design tweaks are sought to differentiate, try to find a balance the market will bear. Fast vesting comes off as an obvious cash-grab by opportunists and the market discounts bad supply and demand fundamentals also. Maybe building a business on top of an existing ecosystem with more network effects is a better strategy, who knows. 

    If you must fork, use the silver spoon, it makes everything taste like ice cream.

TERMS AND CONDITIONS

  0. Definitions.

  "The License" refers to the Silver Spoon edition of the Token Source License.

  "Copyright" refers to laws governing the rights of a creator of a work to control the distribution and usage of their work.

  "Protocol" refers to an open sourced, copyrighted work licensed under the
License.

 A Protocol’s "source code" refers to a set of strings of text that can be interpreted or compiled by a standard computing language’s compilers or interpreters to constitute a working implementation of the Protocol.

A "covered work" means either the unmodified Protocol or a work based
on the Protocol, “based on” is a criterion triggered by including any portion of the Protocol’s source code that isn’t previously covered under a more permission license.

To “fork" a Protocol means to copy some or all of the source code of said protocol and employ it into the creation of a derivative protocol. The nature of the subsequent covered work may then be categorized by language that includes the word “fork” but has a connotation relating to the character of the covered wok. When used in conjunction with “Protocol”, “fork” means a copying of source code, when used in conjunction with other adjectives, it refers to the character of such a copy.

  1. Permissions.

The License grants rights for an indefinite term of Copyright on the Protocol, as long as the License’s terms are not violated. The License allows the Protocol to be run by any user for an indefinite period. Fair Use as defined under relevant Copyright laws may apply and do not conflict with the License.

Any portion of the source code of a Protocol covered by the License that is utilized in a covered work, implicates that the covered work adopt this edition of the License.

Acceptable uses of “covered work” include: Commercial use, Modification, Distribution and Private Use. Commercial use of covered work may include forking the Protocol, making modifications, and convey that software to the public at large in order to establish usage that may accrue value to a different asset, so long as the asset follows the Silver Spoon Clause described in section 2.

2. Silver Spoon Clause

    A Protocol Fork is said to satisfy the Silver Spoon Clause according to the following definitions and prescription:

    A “token” or “coin” is an asset that is native to the Protocol, either living on a public blockchain operated by users of the Protocol, or living on top of an existing public blockchain. 

    The “current supply” refers to the total number of units of an asset that exist in its home ledger at any given time. 

The “expected supply” refers to an estimated total numbers of units of an asset that will exist in the future after the majority of an assets inflation is completed; in some cases an asset’s inflation may be less predictable but the term is as descriptive as the asset’s inflation model reasonably would permit.

An “emission schedule” is the inclusion of automatic seignorage or inflation from the protocol’s logics as an award to various users of the Protocol who provide network value. 

A “founder reward” is any portion of the current and expected supply of a token or coin that vests in time (neutral), as a pre-mine (regrettable) or based on a usage metric (preferred) to the founders, early investors, advisors and team members of a project.

“Hard fork” refers to a covered work that involves a wholesale removal of any state information from the ledger of a Protocol that is, in whole or in part, a fork of the Protocol covered by the License.

“Soft fork” refers to a covered work that does not modify state or token balances but does modify non-consensus changing aspects of the Protocol.
    
“Hard spoon” refers to a covered work that copies faithfully existing token balances and adds additional current or expected supply in the form of parallel founder rewards, alternative emission schedules that increase future expected supply, or other forms of dilutive modification to the monetary policy of the token.

“Soft spoon” refers to competitive and balances non-congruent covered works that may replicate part of the balances of the token, but non-faithfully eschew others.

Note: Why is a hard fork bad and a hard spoon good? Why is a soft spoon bad and a soft fork good? It’s not intuitive, but these are the categories that define the terms of the License. These terms derive from different thinkers and actors in the early history of open-source cryptocurrency.

An example of a hard fork would be making a port of a protocol and possibly making significant changes, while starting over completely with current and expected supply of a whole new asset. Another example of a hard fork that has a distinction with a difference, is when the balances of an asset are identical, and the underlying Protocol competes on the same consensus mechanism as the forked Protocol.

An example of a soft fork would be, adding a peer-to-peer crawler logic to an alternative, souped up version of the standard Protocol implementation, so nodes can communicate more effectively about the Protocol consensus without relying on large commercial nodes. Such an implementation at worst will fail to become popular, and at best it gives users a better way to utilize the Protocol.

    An example of a hard spoon would be taking an OP_Return based Protocol and creating a virtual machine-based, smart contract language using version of the Protocol, and creating a faithful balances replication based on the same blockchain. In this scenario, any founder reward balances are also coming to hold the token during the hard spoon.

    An example of a soft spoon would be doing a replica version of a Protocol on the same blockchain and presenting an edited version of the preceding ledger.

    Thus defined, the Silver Spoon Clause is: 

    Any hard fork and soft spoon is in violation of the License, while any soft fork or hard spoon is within the terms of the License. Specifically, any covered work that edits the pre-existing supply of a coin linked to the Licensed Protocol is in violation of the License. Any covered work that uses the same consensus mechanism and can destabilizes the ledger security and operations of the Protocol’s home network is in violation of the License. Any covered work that honors a snapshot of pre-existing supply of a coin in the Licensed Protocol is in accordance with the License. Any covered work that modifies the Licensed Protocol in a way that does not change the supply of a coin associated with the Licensed Protocol is in accordance with the License. Any changes to the future emission schedule of a coin associated with the Licensed Protocol, including removal of time-based Founder Reward emission, is in accordance with the License. Any founder reward that was based on vesting over time or usage and was of fixed supply is considered to be “pre-existing supply” under the License, whereas founder rewards that are a portion of time-based emission or are an unlimited source of seigniorage for privileged key holders, are editable in accordance with the License.

3. Termination.

 Any covered work that is propagated in accordance with the License retains the License, and any covered work violating the terms of Sections 1 and 2 incurs the voiding of the License, including patent licenses granted under section 4. 

    Due to the irrevocable nature of these violations, once violated the License is terminated in perpetuity.

4. Patent License

Usage: Any portion of the Protocol and its source code that implements any functionality covered by a patent owned by any person who has contributed source code to the Protocol, endows in its use an automatic, free, irrevocable, perpetual, worldwide license to end-usage of the Protocol, and revocable, otherwise perpetual and worldwide license to create covered works that are in accordance with the License. 

Contribution: Any person who includes work of their own creation and copyright into the Protocol covered by the License, submits their copyright to the terms of the License. Likewise any person who includes work that involves a patent owned by that person, endows an irrevocable, perpetual, worldwide license of any such patents for usage in the Protocol.
 
Covered works, covered by the License receive a “patent license” so long as the covered works satisfy the terms of section 1. and section 2 of this License. A “patent license” in this context means, a pledge not to sue for patent infringement. This patent license is revocable, conditional to violation of the License, and once terminated may not be reinstated. The patent license is irrevocable under circumstances not defined in this license.

Patent reciprocity: Any attempt to bring a patent infringement suit against any contributor to the Protocol covered by this License entails an automatic cessation of the benefits of the License, until such time as the case is dropped and associated legal damages incurred are paid.

The License does not imply anything about other defenses to infringement that may apply in a given jurisdiction. 

5. Triggers of Acceptance.

Having or using a copy of a covered work does not in itself constitute acceptance of The License. Only the License permits the publication of covered work. Standard copyright infringement applies without accepting the License. Any Protocol fork or equivalent creation of a covered work automatically indicates acceptance of the License.

 6. Downstream Licensing

Any parties who utilize or further modify a covered work accepting the License independently and such third degree or more modifications are still considered covered work under the License.
  
 7. No Surrender of Others' Freedom.

  Any external legal situation that may apply, that might contravene the terms of the License, do not exempt you from the License’s terms.

8. Upstream Inheritance and License Conflicts

Where Source Code of a Protocol covered under The License is inherited from a pre-existing project which is not covered by The License, and the license that project does have permits the modifications that lead to the Protocol covered under The License, and for such modifications to be summarily licensed under The License instead of being required to remain licensed under the preceding license (a “copyleft” protection) then The License has no conflict. Any part of the Source Code that is previously licensed under a different license, retains that license. However any subsequent covered works derived from a Protocol covered under the TSL: Silver Spoon Edition License become subject to its terms as a covered work, and likewise any subsequent modified or derived works of that covered work are likewise bound by the terms of this license, and so on.

9. No Fiduciary Covenant, No Solicitation, No Offering

The License and the publication and operation of the associated Protocol does not constitute a Fiduciary Covenant between contributors to the Protocol and users of the Protocol. No legal, financial, advisory, or other relationship between contributors and users should be construed by the License or implied by the publication of the Protocol’s open source code or any compiled binaries and related hosting of services. Usage of experimental financial protocols includes operational risk in potential undiscovered flaws in the underlying software, as well as financial risk associated with market, liquidity and basis risk involved with holding, trading, trading derivatives of, or otherwise earning cryptocurrencies, tokens, crypto-assets, and all other manner of exotic assets. Users must do their own due diligence at technical level for software that is still new, and if relying on said software for financial operations at some future time where expert labor has rendered that software generally considered to be safe, users must persist in maintaining due diligence on all financial decisions involving the use of the Protocol.

The publication of the Protocol or the License is not intended to construe a solicitation to users to buy, sell or hold any particular form of property. The publication of the Protocol and the License do not constitute an offering in any form between contributors to the Protocol and users.

10. Disclaimer 

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN, THE SOFTWARE.

11. Future Modifications Prohibited

Any Protocol that has applied the License, including where the Author of the license may be a contributor, and call covered works, must retain the License terms as defined by the document edition published July 30th, 2019, in perpetuity.

12. Attributions:

The MIT License (MIT)

Copyright (c) 2009-2018 The Bitcoin Core developers         
Copyright (c) 2009-2018 Bitcoin Developers
Copyright (c) 2011-2018 The Litecoin Core developers
Copyright © 2014-2017 The OmniLayer developers



