TRADELAYER_H = \
  tradelayer/activation.h \
  tradelayer/ce.h \
  tradelayer/consensushash.h \
  tradelayer/convert.h \
  tradelayer/createpayload.h \
  tradelayer/createtx.h \
  tradelayer/dbtradelist.h \
  tradelayer/dex.h \
  tradelayer/encoding.h \
  tradelayer/errors.h \
  tradelayer/externfns.h \
  tradelayer/fetchwallettx.h \
  tradelayer/log.h \
  tradelayer/mdex.h \
  tradelayer/notifications.h \
  tradelayer/operators_algo_clearing.h \
  tradelayer/parse_string.h \
  tradelayer/pending.h \
  tradelayer/persistence.h \
  tradelayer/register.h \
  tradelayer/rpc.h \
  tradelayer/rpcpayload.h \
  tradelayer/rpcrawtx.h \
  tradelayer/rpcrequirements.h \
  tradelayer/rpctx.h \
  tradelayer/rpctxobject.h \
  tradelayer/rpcvalues.h \
  tradelayer/rules.h \
  tradelayer/script.h \
  tradelayer/sp.h \
  tradelayer/tally.h \
  tradelayer/tradelayer.h \
  tradelayer/tx.h \
  tradelayer/uint256_extensions.h \
  tradelayer/utilsbitcoin.h \
  tradelayer/varint.h \
  tradelayer/version.h \
  tradelayer/walletcache.h \
  tradelayer/wallettxs.h \
  tradelayer/walletutils.h

TRADELAYER_CPP = \
  tradelayer/activation.cpp \
  tradelayer/ce.cpp \
  tradelayer/consensushash.cpp \
  tradelayer/convert.cpp \
  tradelayer/createpayload.cpp \
  tradelayer/createtx.cpp \
  tradelayer/dex.cpp \
  tradelayer/encoding.cpp \
  tradelayer/log.cpp \
  tradelayer/mdex.cpp \
  tradelayer/notifications.cpp \
  tradelayer/tradelayer.cpp \
  tradelayer/parse_string.cpp \
  tradelayer/pending.cpp \
  tradelayer/persistence.cpp \
  tradelayer/register.cpp \
  tradelayer/rpc.cpp \
  tradelayer/rpcpayload.cpp \
  tradelayer/rpcrequirements.cpp \
  tradelayer/rpctxobject.cpp \
  tradelayer/rpcrawtx.cpp \
  tradelayer/operators_algo_clearing.cpp \
  tradelayer/rpcvalues.cpp \
  tradelayer/rules.cpp \
  tradelayer/script.cpp \
  tradelayer/sp.cpp \
  tradelayer/tally.cpp \
  tradelayer/tx.cpp \
  tradelayer/utilsbitcoin.cpp \
  tradelayer/version.cpp \
  tradelayer/walletcache.cpp \
  tradelayer/externfns.cpp \
  tradelayer/wallettxs.cpp \
  tradelayer/fetchwallettx.cpp \
  tradelayer/varint.cpp

if ENABLE_WALLET
TRADELAYER_CPP += tradelayer/rpctx.cpp
endif

libbitcoin_server_a_SOURCES += \
  $(TRADELAYER_CPP) \
  $(TRADELAYER_H)

tradelayer/libbitcoin_server_a-version.$(OBJEXT): obj/build.h # build info

CLEAN_TRADELAYER = tradelayer/*.gcda tradelayer/*.gcno

CLEANFILES += $(CLEAN_TRADELAYER)

if ENABLE_TESTS
include Makefile.tradelayertest.include
endif
